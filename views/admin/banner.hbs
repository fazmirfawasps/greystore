<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    {{>adminHead}}
    <style>
        .g-height-50 {
            height: 50px;
        }

        .g-width-50 {
            width: 50px !important;
        }

        @media (min-width: 0) {
            .g-pa-30 {
                padding: 2.14286rem !important;
            }
        }

        .g-bg-secondary {
            background-color: #fafafa !important;
        }

        .u-shadow-v18 {
            box-shadow: 0 5px 10px -6px rgba(0, 0, 0, 0.15);
        }

        .g-color-gray-dark-v4 {
            color: #777 !important;
        }

        .g-font-size-12 {
            font-size: 0.85714rem !important;
        }

        .media-comment {
            margin-top: 20px
        }

        .singleImageCanvasContainer {
            overflow: hidden;
            height: 350px;
            width: 30%;
            display: inline-block;
            position: relative;
            padding-right: 0px;
            margin-right: 15px;
            border: 2px solid #dfdfdf;
            margin-bottom: 10px;
            padding: 4px;
            border-radius: .25rem;
        }

        .singleImageCanvasContainer .singleImageCanvasCloseBtn {
            position: absolute;
            right: 0;
        }

        .singleImageCanvasContainer .singleImageCanvas {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }
    </style>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.11/cropper.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.11/cropper.js"></script>

</head>

<body>

    {{>admin}}



    <div class="container pt-5">
        <div class="row">
            {{!-- <a href="/admin/addproducts" class="btn btn-info ml-auto " style="width: 200px;">Add coupon </a> --}}
            <!-- Button trigger modal -->
            <div>
                <button type="button" class="btn btn-primary " data-toggle="modal" data-target="#example">
                    Add banner
                </button>
            </div>

        </div>
    </div>
    <div class="container pt-5">
        <div class="row">
        <table class="table table-striped border m-4" id='userData'>
            <thead>
                <tr>
                    <th>No.</th>
                    <th scope="col">Name</th>
                    <th scope="col">Title</th>
                    <th scope="col">Image</th>
                    <th scope="col">Active</th>
                    <th scope="col">Action</th>

                </tr>
            </thead>
            <tbody>
                {{#each banner}}
                <tr>

                    <td>{{inc @ index}}</td>
                    <td>{{this.name}}</td>
                    <td>{{this.title}}</td>
                    <td><img src="/img/{{this.image}}" style="width:50px ;" alt=""></td>
                    <td>
                        <div class="form-check form-switch"><input class="form-check-input" type="checkbox" id="block" {{#if status}}
                                checked onclick="changestatus('{{this._id}}','Inactive')"{{else}} unchecked onclick="changestatus('{{this._id}}','Active')" {{/if}}></div>
                    </td>
                    <td>
                        <a href="/deletebanner?id={{this._id}}" class="btn btn-danger" onclick="return confirm('are u sure u want to delete this banner?')">Delete</a>
                    </td>

                </tr>


                {{/each}}


            </tbody>
        </table>

       </div>
    </div>


    <!-- Modal -->
    <div class="modal fade" id="example" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
        aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Add address</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form id="addbanner" action="/banner" method="post" enctype="multipart/form-data">
                        <div class="form-group">
                            <label for="recipient-name" class="col-form-label">Name</label>
                            <input type="text" class="form-control" id="recipient-name" name="name" required>
                        </div>
                        <div class="form-group">
                            <label for="message-text" class="col-form-label">Title</label>
                            <textarea class="form-control" id="message" name="title" required></textarea>
                        </div>
                        <div class=" mb-4">
                            <label for="id_image">Image</label><br>
                            <input class="form-control" data-toggle="modal" data-target="#exampleModal" type="file"
                                id="id_image" name="image" accept="image/*"  required><br>
                                      
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                            <button type="submit" class="btn btn-primary">Save </button>
                        </div>

                    </form>
                </div>

            </div>
        </div>
    </div>


    <div>

    </div>

    <!-- Modal -->
    <div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
        aria-hidden="true">
        <div class="modal-dialog modal-xl" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Modal title</h5>
                    <div class="modal-header border-bottom-0">
                        <button type="button" class="btn-close" data-dismiss="modal" aria-label="Close"></button>
                    </div>
                </div>
                <div class="modal-body">
                    <div class="form-group row" id="test">
                    </div>
                </div>
                <div class="modal-header text-center">
                    <button class="btn btn-success" type="button" data-dismiss="modal" aria-label="Close">Save
                        Changes</button>
                </div>
            </div>
               
        </div>
    </div>





    {{>adminFoot}}
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.1/jquery.min.js"></script>



    
    <script>
        function changestatus(id,status){
         console.log(id)
         $.ajax({
            url:'/bannerstatus',
            method:'post',
            data:{
                Banner:id,
                Active:status
            },
            success:()=>{
               window.location.href=''

            }
            
        
         })

        }
    </script>

    <script>
        const input = document.getElementById('id_image')
        const test = document.getElementById('test')
        input.addEventListener('change', () => {
            // Getting image file object from the input variable
            const img_data = []
            const imagebox = []
            const crop_btn = []
            const confirm_btn = []
            const url = []
            const length = input.files.length
            for (i = 0; i < length; i++) {
                test.innerHTML += `<div class="col-4"><div id="image-box${i}" class="image-container" style="height: 350px; width: 350px;"> </div>
    <button class="btn btn-outline-info" id="crop-btn${i}" style="width: 100%; margin-top: 10px; display: block;" type="button">Crop</button> </div>`
            }
            for (i = 0; i < length; i++) {
                img_data[i] = input.files[i]
            }

            img_data.forEach((image_data, i) => {
                url[i] = URL.createObjectURL(image_data)
            })
            // createObjectURL() static method creates a DOMString containing a URL representing the object given in the parameter.
            // The new object URL represents the specified File object or Blob object.
            url.forEach((url, i) => {
                document.getElementById('image-box' + i).innerHTML = `<img src="${url}" id="image${i}" style="width:100%;">`
            })

            // Creating a image tag inside imagebox which will hold the cropping view image(uploaded file) to it using the url created before.

            // Storing that cropping view image in a variable


            // Displaying the image box
            for (i = 0; i < length; i++) {
                document.getElementById('image-box' + i).style.display = 'block'
                document.getElementById('crop-btn' + i).style.display = 'block'
            }


            for (i = 0; i < length; i++) {
                cropper(img_data[i], document.getElementById('image' + i), i, document.getElementById('crop-btn' + i), document.getElementById('image-box' + i))
            }



            // Creating a croper object with the cropping view image
            // The new Cropper() method will do all the magic and diplay the cropping view and adding cropping functionality on the website
            // For more settings, check out their official documentation at https://github.com/fengyuanchen/cropperjs
            let container = new DataTransfer();
            let fileInputElement = document.getElementById('id_image');



            function cropper(img_data, image, index, crop_btn, imagebox) {

                const cropper = new Cropper(image, {
                    autoCropArea: 1,
                    viewMode: 1,
                    scalable: false,
                    zoomable: false,
                    movable: false,
                    minCropBoxWidth: 50,
                    minCropBoxHeight: 50,
                })

                // When crop button is clicked this event will get triggered
                crop_btn.addEventListener('click', () => {
                    // This method coverts the selected cropped image on the cropper canvas into a blob object
                    cropper.getCroppedCanvas().toBlob((blob) => {

                        // Gets the original image data
                        // Make a new cropped image file using that blob object, image_data.name will make the new file name same as original image
                        let file = new File([blob], img_data.name, { type: "image/*", lastModified: new Date().getTime() });
                        // Create a new container

                        // Add the cropped image file to the container
                        container.items.add(file);

                        fileInputElement.files = container.files

                        // Replace the original image file with the new cropped image file



                        // Hide the cropper box
                        imagebox.style.display = 'none'
                        // Hide the crop button
                        crop_btn.style.display = 'none'
                    });
                });
            }
        });
    </script>


</body>

</html>